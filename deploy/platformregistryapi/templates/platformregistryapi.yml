apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: platformregistryapi
spec:
  replicas: {{ .Values.NP_REGISTRY_REPLICAS }}
  selector:
    matchLabels:
      service: platformregistryapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformregistryapi
      {{- with .Values.annotations }}
      annotations:
        {{ toYaml . | indent 2 }}
      {{- end }}
    spec:
      containers:
      - name: platformregistryapi
        image: {{ .Values.IMAGE }}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: {{ .Values.NP_REGISTRY_REQUESTS_CPU }}
            memory: {{ .Values.NP_REGISTRY_REQUESTS_MEMORY }}
          limits:
            cpu: {{ .Values.NP_REGISTRY_LIMITS_CPU }}
            memory: {{ .Values.NP_REGISTRY_LIMITS_MEMORY }}
        env:
        - name: NP_REGISTRY_AUTH_URL
          value: {{ .Values.NP_REGISTRY_AUTH_URL }}
        - name: NP_REGISTRY_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: platformservices-secret
              key: registry_token
        - name: NP_REGISTRY_ZIPKIN_URL
          value: {{ .Values.NP_REGISTRY_ZIPKIN_URL }}
        - name: NP_REGISTRY_ZIPKIN_SAMPLE_RATE
          value: "{{ .Values.NP_REGISTRY_ZIPKIN_SAMPLE_RATE }}"
        - name: NP_REGISTRY_UPSTREAM_TYPE
          value: {{ .Values.NP_REGISTRY_UPSTREAM_TYPE }}
        - name: NP_REGISTRY_UPSTREAM_URL
          value: {{ .Values.NP_REGISTRY_UPSTREAM_URL }}
        - name: NP_REGISTRY_UPSTREAM_PROJECT
          value: {{ .Values.NP_REGISTRY_UPSTREAM_PROJECT }}
        - name: NP_REGISTRY_UPSTREAM_MAX_CATALOG_ENTRIES
          value: "{{ .Values.NP_REGISTRY_UPSTREAM_MAX_CATALOG_ENTRIES }}"
        - name: NP_CLUSTER_NAME
          value: {{ .Values.NP_CLUSTER_NAME }}
        {{- if eq .Values.NP_REGISTRY_UPSTREAM_TYPE "oauth" }}
        - name: NP_REGISTRY_UPSTREAM_TOKEN_SERVICE
          value: {{ .Values.NP_REGISTRY_UPSTREAM_TOKEN_SERVICE }}
        - name: NP_REGISTRY_UPSTREAM_TOKEN_URL
          value: {{ .Values.NP_REGISTRY_UPSTREAM_TOKEN_URL }}
        - name: NP_REGISTRY_UPSTREAM_TOKEN_USERNAME
          valueFrom:
            secretKeyRef:
              name: gcr-secret
              key: username
        - name: NP_REGISTRY_UPSTREAM_TOKEN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gcr-secret
              key: password
        {{- if .Values.NP_REGISTRY_UPSTREAM_TOKEN_REGISTRY_SCOPE }}
        - name: NP_REGISTRY_UPSTREAM_TOKEN_REGISTRY_SCOPE
          value: {{ .Values.NP_REGISTRY_UPSTREAM_TOKEN_REGISTRY_SCOPE }}
        {{- end }}
        {{- if .Values.NP_REGISTRY_UPSTREAM_TOKEN_REPO_SCOPE_ACTIONS }}
        - name: NP_REGISTRY_UPSTREAM_TOKEN_REPO_SCOPE_ACTIONS
          value: {{ .Values.NP_REGISTRY_UPSTREAM_TOKEN_REPO_SCOPE_ACTIONS }}
        {{- end }}
        {{- end }}
        {{- if eq .Values.NP_REGISTRY_UPSTREAM_TYPE "aws_ecr" }}
        - name: AWS_DEFAULT_REGION
          value: {{ .Values.AWS_DEFAULT_REGION }}
        {{- end }}
      {{- if .Values.DOCKER_LOGIN_ARTIFACTORY_SECRET_NAME }}
      imagePullSecrets:
        - name: {{ .Values.DOCKER_LOGIN_ARTIFACTORY_SECRET_NAME }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    traefik.ingress.kubernetes.io/affinity: "true"
    traefik.ingress.kubernetes.io/session-cookie-name: NEURO_REGISTRY_SESSION
  name: platformregistryapi
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    service: platformregistryapi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: platformregistryapi-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefix
    external-dns.platform.neuromation.io: "true"
spec:
  rules:
  - host: {{ .Values.INGRESS_HOST }}
    http:
      paths:
      - path: /
        backend:
          serviceName: platformregistryapi
          servicePort: 8080

