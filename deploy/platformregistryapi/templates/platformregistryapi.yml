apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: platformregistryapi
spec:
  replicas: {{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_REPLICAS | first | default .Values.NP_REGISTRY_REPLICAS._default) }}
  selector:
    matchLabels:
      service: platformregistryapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformregistryapi
    spec:
      containers:
      - name: platformregistryapi
        image: {{ printf "%s" (pluck .Values.global.env .Values.IMAGE | first | default .Values.IMAGE._default) }}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: {{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_REQUESTS_CPU | first | default .Values.NP_REGISTRY_REQUESTS_CPU._default) }}
            memory: {{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_REQUESTS_MEMORY | first | default .Values.NP_REGISTRY_REQUESTS_MEMORY._default) }}
          limits:
            cpu: {{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_LIMITS_CPU | first | default .Values.NP_REGISTRY_LIMITS_CPU._default) }}
            memory: {{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_LIMITS_MEMORY | first | default .Values.NP_REGISTRY_LIMITS_MEMORY._default) }}
        env:
        - name: NP_REGISTRY_AUTH_URL
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_AUTH_URL | first | default .Values.NP_REGISTRY_AUTH_URL._default) }}
        - name: NP_REGISTRY_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: platformservices-secret
              key: registry_token
        - name: NP_REGISTRY_UPSTREAM_URL
          value: https://gcr.io
        - name: NP_REGISTRY_UPSTREAM_TOKEN_SERVICE
          value: gcr.io
        - name: NP_REGISTRY_UPSTREAM_PROJECT
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_UPSTREAM_PROJECT | first | default .Values.NP_REGISTRY_UPSTREAM_PROJECT._default) }}
        - name: NP_REGISTRY_UPSTREAM_TOKEN_URL
          value: https://gcr.io/v2/token
        - name: NP_REGISTRY_UPSTREAM_TOKEN_USERNAME
          valueFrom:
            secretKeyRef:
              name: gcr-secret
              key: username
        - name: NP_REGISTRY_UPSTREAM_TOKEN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gcr-secret
              key: password
---
apiVersion: v1
kind: Service
metadata:
  name: platformregistryapi
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    service: platformregistryapi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: platformregistryapi-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefix
    external-dns.platform.neuromation.io: true
spec:
  rules:
  - host: {{ printf "%s" (pluck .Values.global.env .Values.INGRESS_HOST | first | default .Values.INGRESS_HOST._default) }}
    http:
      paths:
      - path: /
        backend:
          serviceName: platformregistryapi
          servicePort: 8080
  - host: {{ printf "%s" (pluck .Values.global.env .Values.INGRESS_HOST_TEMPORARY | first | default .Values.INGRESS_HOST_TEMPORARY._default) }}
    http:
      paths:
      - path: /
        backend:
          serviceName: platformregistryapi
          servicePort: 8080
  - host: {{ printf "%s" (pluck .Values.global.env .Values.INGRESS_HOST_TEMPORARY_NEW_DOMAIN | first | default .Values.INGRESS_HOST_TEMPORARY_NEW_DOMAIN._default) }}
    http:
      paths:
      - path: /
        backend:
          serviceName: platformregistryapi
          servicePort: 8080